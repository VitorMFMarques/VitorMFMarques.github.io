{"version":3,"sources":["universe.jpg","tick.mp3","end.mp3","joker.wav","correct.wav","App.js","index.js"],"names":["timerJob","undefined","timerRunning","roundTotalTimer","roundTimer","bonusTimerJob","bonusRoundTimer","correctAnswers","bonusTimerRunning","App","useState","timerIsRunning","setTimerRunning","round","setRound","timer","setTimer","timerPercentage","setTimerPercentage","timerScale","setTimerScale","bonusTimerPercentage","setBonusTimerPercentage","extraJokerLeft1","setExtraJokerLeft1","extraJokerLeft2","setExtraJokerLeft2","bonusTimer","setBonusTimer","bonusRound","setBonusRound","bonusTimerScale","setBonusTimerScale","useSound","tick","playTick","end","playEnd","correct","playCorrect","joker","playJoker","updateTimer","nextRound","className","style","backgroundImage","universe","backgroundSize","height","color","Grid","container","spacing","item","xs","sm","md","lg","Fab","aria-label","size","onClick","disabled","Typography","variant","component","CircularProgress","value","gutterBottom","transform","clearInterval","setInterval","parseInt","setTimeout","Dialog","disableBackdropClick","open","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","left","marginTop","DialogActions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fcb620af.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/universe.419e0fc7.jpg\";","export default __webpack_public_path__ + \"static/media/tick.a830ac2f.mp3\";","export default __webpack_public_path__ + \"static/media/end.7d7dc550.mp3\";","export default __webpack_public_path__ + \"static/media/joker.60f7268a.wav\";","export default __webpack_public_path__ + \"static/media/correct.a673b70c.wav\";","import {React, useState} from 'react';\nimport './App.css';\nimport Grid from '@material-ui/core/Grid';\nimport Fab from '@material-ui/core/Fab';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CheckIcon from '@material-ui/icons/Check';\nimport universe from \"./universe.jpg\";\nimport useSound from 'use-sound';\nimport tick from './tick.mp3';\nimport end from './end.mp3';\nimport joker from './joker.wav';\nimport correct from './correct.wav';\nimport CloseIcon from '@material-ui/icons/Close';\n\nlet timerJob = undefined;\nlet timerRunning = false;\nlet roundTotalTimer = 30;\nlet roundTimer = 30;\n\nlet bonusTimerJob = undefined;\nlet bonusRoundTimer = 60;\nlet correctAnswers = 0;\nlet bonusTimerRunning = false;\n\nfunction App() {\n\n\n  const [timerIsRunning, setTimerRunning] = useState(false);\n  const [round, setRound] = useState(1);\n  const [timer, setTimer] = useState(30);\n  const [timerPercentage, setTimerPercentage] = useState(100);\n  const [timerScale, setTimerScale] = useState(\"scale(1)\");\n\n  //bonus\n  const [bonusTimerPercentage, setBonusTimerPercentage] = useState(100);\n  const [extraJokerLeft1, setExtraJokerLeft1] = useState(0);\n  const [extraJokerLeft2, setExtraJokerLeft2] = useState(0);\n  const [bonusTimer, setBonusTimer] = useState(60);\n  const [bonusRound, setBonusRound] = useState(false);\n  const [bonusTimerScale, setBonusTimerScale] = useState(\"scale(1)\");\n\n\n  const [playTick] = useSound(tick);\n  const [playEnd] = useSound(end);\n  const [playCorrect] = useSound(correct);\n  const [playJoker] = useSound(joker);\n\n  const incrementRound = () => {\n    if(!timerRunning && round < 12){\n      setRound(round + 1);\n      updateTimer(round + 1);\n    }\n  }\n\n  const decrementRound = () => {\n    if(!timerRunning && round > 1){\n      setRound(round - 1);\n      updateTimer(round - 1);\n    }\n  }\n\n  const updateTimer = (nextRound) => {\n    roundTotalTimer = 30;\n    if(nextRound > 4){\n      roundTotalTimer = 40;\n    }\n    if(nextRound > 8){\n      roundTotalTimer = 50;\n    }\n    roundTimer = roundTotalTimer;\n    setTimer(roundTotalTimer);\n    setTimerPercentage(100);\n  }\n\n  const onTimerStart = () => {\n    if(typeof timerJob !== \"undefined\"){\n      clearInterval(timerJob);\n    }\n    timerJob = setInterval(() => {\n      if(roundTimer - 1 >= 0){\n        roundTimer -= 1;\n        if(roundTimer < 11){\n          playTick();\n        }\n        setTimer(roundTimer);\n        setTimerPercentage(parseInt((roundTimer / roundTotalTimer) * 100));\n        setTimerScale(\"scale(1.5)\");\n        setTimeout(() => setTimerScale(\"scale(1)\"), 500);\n      } else {\n        playEnd();\n        setTimerScale(\"scale(1)\");\n        clearInterval(timerJob);\n        timerRunning = false;\n        setTimerRunning(timerRunning);\n        updateTimer(round);\n      }\n    }, 1000);\n    timerRunning = true;\n    setTimerRunning(timerRunning);\n  }\n\n  const restartTimer = () => {\n    if(typeof timerJob !== \"undefined\"){\n      clearInterval(timerJob);\n    }\n    timerRunning = false;\n    setTimerRunning(timerRunning);\n    updateTimer(round);\n  }\n\n  const useJoker = () => {\n    if(typeof timerJob !== \"undefined\"){\n      clearInterval(timerJob);\n    }\n    timerRunning = false;\n    setTimerRunning(timerRunning);\n    roundTotalTimer += 15;\n    roundTimer += 15;\n    setTimer(roundTimer);\n    setTimerPercentage(parseInt((roundTimer / roundTotalTimer) * 100));\n  }\n\n  const onBonusTimerStart = () => {\n    if(typeof bonusTimerJob === \"undefined\" && correctAnswers < 12){\n      bonusTimerJob = setInterval(() => {\n        if(bonusRoundTimer - 1 >= 0){\n          bonusRoundTimer -= 1;\n          setBonusTimer(bonusRoundTimer);\n          setBonusTimerPercentage(parseInt((bonusRoundTimer / 60) * 100));\n          if(bonusRoundTimer < 10){\n            playTick();\n          }\n          setBonusTimerScale(\"scale(1.3)\");\n          setTimeout(() => setBonusTimerScale(\"scale(1)\"), 500);\n        } else {\n          playEnd();\n          setBonusTimerScale(\"scale(1)\");\n          bonusTimerRunning = false;\n          clearInterval(bonusTimerJob);\n          bonusRoundTimer = 60;\n          setBonusTimer(bonusRoundTimer);\n          setBonusTimerPercentage(parseInt((bonusRoundTimer / 60) * 100));\n        }\n      }, 1000);\n      bonusTimerRunning = true;\n    }\n  }\n\n  const onCorrectAnswer = () => {\n    if(bonusTimerRunning && correctAnswers < 11){\n      correctAnswers += 1;\n      if(correctAnswers !== 5 && correctAnswers !== 10){\n        playCorrect();\n      }\n      if(correctAnswers < 6){\n        setExtraJokerLeft1(parseInt((correctAnswers / 5) * 100));\n      } else {\n        setExtraJokerLeft2(parseInt(((correctAnswers - 5) / 5) * 100));\n      }\n      if(correctAnswers === 5){\n        playJoker();\n      }\n      if(correctAnswers === 10){\n        playJoker();\n        bonusTimerRunning = false;\n        clearInterval(bonusTimerJob);\n      }\n    }\n  }\n\n  const closeBonusPopup = () => {\n    setBonusRound(false);\n    bonusTimerRunning = false;\n    clearInterval(bonusTimerJob);\n    bonusTimerJob = undefined;\n  }\n\n  const onBonusRound = () =>{\n    bonusTimerJob = undefined;\n    setExtraJokerLeft1(0);\n    setExtraJokerLeft2(0);\n    correctAnswers = 0;\n    bonusRoundTimer = 60;\n    setBonusTimer(bonusRoundTimer);\n    setBonusTimerPercentage(100);\n    setBonusRound(true);\n  }\n\n  return (\n    <div className=\"App\" style={{\n      backgroundImage: 'url('+universe+')',\n      backgroundSize: \"cover\",\n      height: \"100vh\",\n      color: \"#f5f5f5\"\n    }} >\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Grid container spacing={3} className=\"RoundContainer\">\n              <Grid item xs={3} sm={3} md={4} lg={5} className=\"PrevRoundContainer\">\n                <Fab className=\"RoundButton\" aria-label=\"delete\" size=\"small\" onClick={decrementRound} disabled={timerIsRunning}>\n                  <ArrowBackIcon className=\"ButtonIcon\"/>\n                </Fab>\n              </Grid>\n              <Grid item xs={6} sm={6} md={4} lg={2}>\n              <Typography className=\"RoundLabel\" variant=\"h4\" component=\"h4\">\n                Ronda {round}\n              </Typography>\n              </Grid>\n              <Grid item xs={3} sm={3} md={4} lg={5} className=\"NextRoundContainer\">\n                <Fab className=\"RoundButton\" aria-label=\"delete\" size=\"small\" onClick={incrementRound} disabled={timerIsRunning}>\n                  <ArrowForwardIcon className=\"ButtonIcon\"/>\n                </Fab>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className=\"TimerContainer\">\n            <CircularProgress variant=\"determinate\" value={timerPercentage} className=\"TimerProgress\"/>\n            <Typography className=\"TimerLabel\" variant=\"h3\" component=\"h3\" gutterBottom style={{transform: timerScale}}>\n                {timer}\n              </Typography>\n          </Grid>\n          <Grid item xs={12} className=\"TimerActionsContainer\">\n                <Fab aria-label=\"delete\" size=\"small\" className=\"TimeButton\" onClick={onTimerStart}>\n                  <PlayArrowIcon className=\"ButtonIcon\"/>\n                </Fab>\n                <Fab aria-label=\"delete\" size=\"small\" className=\"TimeButton\" onClick={restartTimer}>\n                  <RestoreIcon className=\"ButtonIcon\"/>\n                </Fab>\n          </Grid>\n          <Grid item xs={12} className=\"TimerActionsContainer\">\n            <Fab variant=\"extended\" className=\"JokerButton\" onClick={useJoker}>\n              <div className=\"JokerTop\"></div>\n              JOKER\n              <div className=\"JokerBottom\"></div>\n            </Fab>\n          </Grid>\n          <Grid item xs={12} className=\"BonusRoundContainer\">\n            <Fab variant=\"extended\" className=\"BonusRoundButton\" onClick={onBonusRound} disabled={timerIsRunning}>\n              Ronda Bónus\n            </Fab>\n          </Grid>\n        </Grid>\n        <Dialog\n          disableBackdropClick\n          open={bonusRound}\n          onClose={() => setBonusRound(false)}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          className=\"BonusRoundContainer\"\n        >\n          <Fab aria-label=\"delete\" size=\"small\" className=\"CloseBonusPopup\" onClick={closeBonusPopup}>\n            <CloseIcon className=\"ButtonIcon\"/>\n          </Fab>\n          <DialogTitle id=\"alert-dialog-title\" className=\"BonusRoundTitle\">\n                Ronda Bónus\n          </DialogTitle>\n          <DialogContent className=\"BonusRoundContent\">\n            <Grid container spacing={3}>\n              <Grid item xs={12} className=\"BonusRoundLabels\">\n                <div className=\"JokerAwardedContainer\">\n                  <Fab variant=\"extended\" className=\"JokerAwarded\" disabled>\n                    <div className=\"JokerTop\"></div>\n                      JOKER\n                    <div className=\"JokerBottom\"></div>\n                    <div className=\"JokerAwardedOverflow\" style={{left:extraJokerLeft2 + \"%\"}}></div>\n                  </Fab>\n                </div>\n                <div className=\"JokerAwardedContainer\" style={{marginTop: 20}}>\n                  <Fab variant=\"extended\" className=\"JokerAwarded\" disabled>\n                    <div className=\"JokerTop\"></div>\n                      JOKER\n                    <div className=\"JokerBottom\"></div>\n                    <div className=\"JokerAwardedOverflow\" style={{left:extraJokerLeft1 + \"%\"}}></div>\n                  </Fab>\n                </div>\n              </Grid>\n              <Grid item xs={12} className=\"BonusTimerContainer\">\n                <CircularProgress variant=\"determinate\" value={bonusTimerPercentage} className=\"BonusRoundTimerProgress\"/>\n                <Typography className=\"BonusRoundTimerLabel\" variant=\"h3\" component=\"h3\" gutterBottom style={{transform: bonusTimerScale}}>\n                  {bonusTimer}\n                </Typography>\n              </Grid>\n              <Grid item xs={12} className=\"TimerActionsContainer\">\n                <Fab aria-label=\"delete\" size=\"small\" className=\"TimeButton\" onClick={onBonusTimerStart}>\n                    <PlayArrowIcon className=\"ButtonIcon\"/>\n                </Fab>\n              </Grid>\n              <Grid item xs={12} className=\"BonusTimerActionsContainer\">\n                <Fab variant=\"extended\" className=\"BonusTimerCorrectButton\" onClick={onCorrectAnswer}>\n                  <CheckIcon className=\"BonusTimerCorrectButtonIcon\"/>\n                  Correto\n                </Fab>\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <DialogActions>\n           \n          </DialogActions>\n        </Dialog>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}